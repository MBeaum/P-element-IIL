plot_dyakall <- ggplot(data_stacked_dya, aes(x = Window, y = Cumulative_Frequency_dya, fill = Sample_ID)) +
geom_bar(stat = "identity", position = "stack", color = "black", width = 150) +
labs(x = "Window", y = "cumulative frequency", fill = "Sample ID") +
theme_minimal() +
facet_wrap(~ Chromosome, scales = "free_x", ncol = 1) +
theme(plot.background = element_rect(fill = "white"),
strip.placement = "outside",
strip.background = element_blank(),
strip.text = element_text(hjust = 0.5, margin = margin(b = 10)))
output_dyakall <- "dna/figs/overlaps/dyak_overlap_all.png"
ggsave(output_dyakall, plot = plot_dyakall, width = 8, height = 14)
knitr::include_graphics(output_dyakall)
data <- read.delim("/Volumes/Data/Projects/invaded_inbred_lines/scripts/dsim_window_overlap.txt", header = FALSE, sep = "\t", col.names = c("Sample_ID", "Chromosome", "Position", "Frequency"))
desired_chromosomes <- c("X", "2L", "2R", "3L", "3R")
data <- subset(data, Chromosome %in% desired_chromosomes)
data$Sample_ID <- as.factor(data$Sample_ID)
library(dplyr)
data <- data %>%
group_by(Chromosome, Sample_ID, Window = floor(Position/1000)) %>%
summarise(Cumulative_Frequency_ds = sum(Frequency)) %>%
ungroup()
library(tidyr)
data_stacked_ds <- data %>%
pivot_wider(names_from = Sample_ID, values_from = Cumulative_Frequency_ds, values_fill = 0) %>%
gather(Sample_ID, Cumulative_Frequency_ds, -Chromosome, -Window) %>%
arrange(Chromosome, Window)
library(ggplot2)
plot_dsim <- ggplot(data_stacked_ds, aes(x = Window, y = Cumulative_Frequency_ds, fill = Sample_ID)) +
geom_bar(stat = "identity", position = "stack", color = "black", width = 150) +
labs(x = "Window", y = "cumulative frequency", fill = "Sample ID") +
theme_minimal() +
facet_wrap(~ Chromosome, scales = "free_x", ncol = 1) +
theme(plot.background = element_rect(fill = "white"),
strip.placement = "outside",
strip.background = element_blank(),
strip.text = element_text(hjust = 0.5, margin = margin(b = 10)))
output_dsim <- "dna/figs/overlaps/dsim_overlap.png"
ggsave(output_dsim, plot = plot_dsim, width = 8, height = 14)
knitr::include_graphics(output_dsim)
data <- read.delim("/Volumes/Data/Projects/invaded_inbred_lines/scripts/dmel_window_overlap.txt", header = FALSE, sep = "\t", col.names = c("Sample_ID", "Chromosome", "Position", "Frequency"))
desired_chromosomes <- c("X", "2L", "2R", "3L", "3R")
data <- subset(data, Chromosome %in% desired_chromosomes)
data$Sample_ID <- as.factor(data$Sample_ID)
library(dplyr)
data <- data %>%
group_by(Chromosome, Sample_ID, Window = floor(Position/1000)) %>%
summarise(Cumulative_Frequency_dm = sum(Frequency)) %>%
ungroup()
library(tidyr)
data_stacked <- data %>%
pivot_wider(names_from = Sample_ID, values_from = Cumulative_Frequency_dm, values_fill = 0) %>%
gather(Sample_ID, Cumulative_Frequency_dm, -Chromosome, -Window) %>%
arrange(Chromosome, Window)
library(ggplot2)
plot_dmel <- ggplot(data_stacked, aes(x = Window, y = Cumulative_Frequency_dm, fill = Sample_ID)) +
geom_bar(stat = "identity", position = "stack", color = "black", width = 125) +
labs(x = "Window", y = "cumulative frequency", fill = "Sample ID") +
theme_minimal() +
facet_wrap(~ Chromosome, scales = "free_x", ncol = 1) +
theme(plot.background = element_rect(fill = "white"),
strip.placement = "outside",
strip.background = element_blank(),
strip.text = element_text(hjust = 0.5, margin = margin(b = 10)))
output_dmel <- "dna/figs/overlaps/dmel_overlap.png"
ggsave(output_dmel, plot = plot_dmel, width = 8, height = 14)
knitr::include_graphics(output_dmel)
data <- read.delim("/Volumes/Data/Projects/invaded_inbred_lines/scripts/dyak_window_overlap.txt", header = FALSE, sep = "\t", col.names = c("Sample_ID", "Chromosome", "Position", "Frequency"))
desired_chromosomes <- c("X", "2L", "2R", "3L", "3R")
data <- subset(data, Chromosome %in% desired_chromosomes)
data$Sample_ID <- as.factor(data$Sample_ID)
library(dplyr)
data <- data %>%
group_by(Chromosome, Sample_ID, Window = floor(Position/1000)) %>%
summarise(Cumulative_Frequency_dy = sum(Frequency)) %>%
ungroup()
library(tidyr)
data_stacked <- data %>%
pivot_wider(names_from = Sample_ID, values_from = Cumulative_Frequency_dy, values_fill = 0) %>%
gather(Sample_ID, Cumulative_Frequency_dy, -Chromosome, -Window) %>%
arrange(Chromosome, Window)
library(ggplot2)
plot_dyak <- ggplot(data_stacked, aes(x = Window, y = Cumulative_Frequency_dy, fill = Sample_ID)) +
geom_bar(stat = "identity", position = "stack", color = "black", width = 90) +
labs(x = "Window", y = "cumulative frequency", fill = "Sample ID") +
theme_minimal() +
facet_wrap(~ Chromosome, scales = "free_x", ncol = 1) +
theme(plot.background = element_rect(fill = "white"),
strip.placement = "outside",
strip.background = element_blank(),
strip.text = element_text(hjust = 0.5, margin = margin(b = 10)))
output_dyak <- "dna/figs/overlaps/dyak_overlap.png"
ggsave(output_dyak, plot = plot_dyak, width = 8, height = 14)
knitr::include_graphics(output_dyak)
data <- read.delim("/Volumes/Data/Projects/invaded_inbred_lines/scripts/dyak_window_overlap.txt", header = FALSE, sep = "\t", col.names = c("Sample_ID", "Chromosome", "Position", "Frequency"))
desired_chromosomes <- c("X", "2L", "2R", "3L", "3R")
data <- subset(data, Chromosome %in% desired_chromosomes)
data$Sample_ID <- as.factor(data$Sample_ID)
library(dplyr)
data <- data %>%
group_by(Chromosome, Sample_ID, Window = floor(Position/1000)) %>%
summarise(Cumulative_Frequency_dy = sum(Frequency)) %>%
ungroup()
library(tidyr)
data_stacked_dya <- data %>%
pivot_wider(names_from = Sample_ID, values_from = Cumulative_Frequency_dy, values_fill = 0) %>%
gather(Sample_ID, Cumulative_Frequency_dy, -Chromosome, -Window) %>%
arrange(Chromosome, Window)
library(ggplot2)
dx  <- data_stacked_dya %>%
filter(Chromosome == "X")
d2l  <- data_stacked_dya %>%
filter(Chromosome == "2L")
d2r  <- data_stacked_dya %>%
filter(Chromosome == "2R")
d3l  <- data_stacked_dya %>%
filter(Chromosome == "3L")
d3r  <- data_stacked_dya %>%
filter(Chromosome == "3R")
d4  <- data_stacked_dya %>%
filter(Chromosome == "4")
plot_dyak_x <- ggplot(dx, aes(x = Window, y = Cumulative_Frequency_dy, fill = Sample_ID)) +
geom_bar(stat = "identity", position = "stack", color = "black", width = 90) +
labs(x = "Window", y = "cumulative frequency", fill = "Sample ID") +
theme_minimal() +
theme(plot.background = element_rect(fill = "white"),
strip.placement = "outside",
strip.background = element_blank(),
strip.text = element_text(hjust = 0.5, margin = margin(b = 10)))
plot_dyak_2l <- ggplot(d2l, aes(x = Window, y = Cumulative_Frequency_dy, fill = Sample_ID)) +
geom_bar(stat = "identity", position = "stack", color = "black", width = 90) +
labs(x = "Window", y = "Cumulative Frequency", fill = "Sample ID") +
xlim(0,20000)
theme_minimal() +
theme(plot.background = element_rect(fill = "white"),
strip.placement = "outside",
strip.background = element_blank(),
strip.text = element_text(hjust = 0.5, margin = margin(b = 10)))
library(ggpubr)
dyak_plot <- ggarrange(plot_dyak_x, plot_dyak_2l, ncol = 1, nrow = 2)
dyak_plot
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("dmel_3_50x.png")
knitr::include_graphics("dsim_14_50x.png")
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("figs/deviaTE_png/Dsim_17.PPI251.png")
knitr::opts_chunk$set(echo = TRUE)
data <- read.delim("/Volumes/Data/Projects/invaded_inbred_lines/scripts/dyak_window_overlap.txt", header = FALSE, sep = "\t", col.names = c("Sample_ID", "Chromosome", "Position", "Frequency"))
desired_chromosomes <- c("X", "2L", "2R", "3L", "3R")
data <- subset(data, Chromosome %in% desired_chromosomes)
data$Sample_ID <- as.factor(data$Sample_ID)
library(dplyr)
data <- data %>%
group_by(Chromosome, Sample_ID, Window = floor(Position/1000)) %>%
summarise(Cumulative_Frequency_dy = sum(Frequency)) %>%
ungroup()
library(tidyr)
data_stacked <- data %>%
pivot_wider(names_from = Sample_ID, values_from = Cumulative_Frequency_dy, values_fill = 0) %>%
gather(Sample_ID, Cumulative_Frequency_dy, -Chromosome, -Window) %>%
arrange(Chromosome, Window)
library(ggplot2)
plot_dyak <- ggplot(data_stacked, aes(x = Window, y = Cumulative_Frequency_dy, fill = Sample_ID)) +
geom_bar(stat = "identity", position = "stack", color = "black", width = 90) +
labs(x = "Window", y = "cumulative frequency", fill = "Sample ID") +
theme_minimal() +
facet_wrap(~ Chromosome, scales = "free_x", ncol = 1) +
theme(plot.background = element_rect(fill = "white"),
strip.placement = "outside",
strip.background = element_blank(),
strip.text = element_text(hjust = 0.5, margin = margin(b = 10)))
output_dyak <- "dna/figs/dyak_overlap.png"
ggsave(output_dyak, plot = plot_dyak, width = 8, height = 14)
knitr::include_graphics(output_dyak)
library(viridisLite)
library(ggplot2)
library(gridExtra)
theme_set(theme_bw())
dm <- read.table("/Volumes/Data/Projects/invaded_inbred_lines/dna/popTE2/dmel/dmel.teinsertions")
names(dm) <- c("Sample", "Chromosome", "Position", "Strand", "TE", "Order", "FR", "Comment", "Frequency")
ds <- read.table("/Volumes/Data/Projects/invaded_inbred_lines/dna/popTE2/dsim/dsim.teinsertions")
names(ds) <- c("Sample", "Chromosome", "Position", "Strand", "TE", "Order", "FR", "Comment", "Frequency")
dy <- read.table("/Volumes/Data/Projects/invaded_inbred_lines/dna/popTE2/dyak/dyak.teinsertions")
names(dy) <- c("Sample", "Chromosome", "Position", "Strand", "TE", "Order", "FR", "Comment", "Frequency")
dm <- subset(dm, Chromosome == "X" | Chromosome == "2L" | Chromosome == "2R" | Chromosome == "3L" | Chromosome == "3R" | Chromosome == "4")
ds <- subset(ds, Chromosome == "X" | Chromosome == "2L" | Chromosome == "2R" | Chromosome == "3L" | Chromosome == "3R" | Chromosome == "4")
dy <- subset(dy, Chromosome == "X" | Chromosome == "2L" | Chromosome == "2R" | Chromosome == "3L" | Chromosome == "3R" | Chromosome == "4")
dm$Chromosome <- factor(dm$Chromosome, levels = c("X", "2L", "2R", "3L", "3R", "4"))
lim <- c(0.0, 0.51)
ybreaks <- c(0, 0.1, 0.2, 0.3, 0.4, 0.5)
ds$Chromosome <- factor(ds$Chromosome, levels = c("X", "2L", "2R", "3L", "3R", "4"))
lim <- c(0.0, 0.51)
ybreaks <- c(0, 0.1, 0.2, 0.3, 0.4, 0.5)
dy$Chromosome <- factor(dy$Chromosome, levels = c("X", "2L", "2R", "3L", "3R", "4"))
lim <- c(0.0, 0.51)
ybreaks <- c(0, 0.1, 0.2, 0.3, 0.4, 0.5)
sample_colors <- viridisLite::turbo(11)
dm$Sample <- as.factor(dm$Sample)
ds$Sample <- as.factor(ds$Sample)
dy$Sample <- as.factor(dy$Sample)
dmp <- ggplot(dm, aes(x = Position, y = Frequency, color = Sample)) +
geom_point(size = 0.5) +
facet_grid(. ~ Chromosome, scales = "free_x", space = "free_x") +
scale_x_continuous(breaks = c(0, 5000000, 10000000, 15000000, 20000000, 25000000),
labels = c("0", "5m", "10m", "15m", "20m", "25m")) +
scale_y_continuous(name = "Population frequency", limits = c(min(dm$Frequency), max(dm$Frequency)),
breaks = seq(0, 1, by = 0.1)) +
scale_color_manual(values = sample_colors) +
theme(legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 14)) +
labs(title = "P-element insertion frequencies in D. melanogaster populations")
dsp <- ggplot(ds, aes(x = Position, y = Frequency, color = Sample)) +
geom_point(size = 0.5) +
facet_grid(. ~ Chromosome, scales = "free_x", space = "free_x") +
scale_x_continuous(breaks = c(0, 5000000, 10000000, 15000000, 20000000, 25000000),
labels = c("0", "5m", "10m", "15m", "20m", "25m")) +
scale_y_continuous(name = "Population frequency", limits = c(min(ds$Frequency), max(ds$Frequency)),
breaks = seq(0, 1, by = 0.1)) +
scale_color_manual(values = sample_colors) +
theme(legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 14)) +
labs(title = "P-element insertion frequencies in D. simulans populations")
dyp <- ggplot(dy, aes(x = Position, y = Frequency, color = Sample)) +
geom_point(size = 0.5) +
facet_grid(. ~ Chromosome, scales = "free_x", space = "free_x") +
scale_x_continuous(breaks = c(0, 5000000, 10000000, 15000000, 20000000, 25000000),
labels = c("0", "5m", "10m", "15m", "20m", "25m")) +
scale_y_continuous(name = "Population frequency", limits = c(min(dy$Frequency), max(dy$Frequency)),
breaks = seq(0, 1, by = 0.1)) +
scale_color_manual(values = sample_colors) +
theme(legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 14)) +
labs(title = "P-element insertion frequencies in D. yakuba populations")
ggsave("dna/figs/dmel_popTE2_all.png", dmp, width = 16, height = 8, dpi = 300)
ggsave("dna/figs/dsim_popTE2_all.png", dsp, width = 16, height = 8, dpi = 300)
ggsave("dna/figs/dyak_popTE2_all.png", dyp, width = 16, height = 8, dpi = 300)
knitr::include_graphics("dna/figs/dmel_popTE2_all.png")
knitr::include_graphics("dna/figs/dsim_popTE2_all.png")
knitr::include_graphics("dna/figs/dyak_popTE2_all.png")
library(ggplot2)
library(gridExtra)
theme_set(theme_bw())
datasets <- list()
for (i in 1:10) {
file_path <- sprintf("/Volumes/Data/Projects/invaded_inbred_lines/dna/popTE2/dmel/replicates/%d.teinsertions", i)
dataset <- read.table(file_path)
names(dataset) <- c("Sample", "Chromosome", "Position", "Strand", "TE", "Order", "FR", "Comment", "Frequency")
dataset <- subset(dataset, Chromosome %in% c("X", "2L", "2R", "3L", "3R", "4"))
datasets[[i]] <- dataset
}
plots <- list()
for (i in 1:10) {
dataset <- datasets[[i]]
plot <- ggplot(dataset, aes(x = Position, y = Frequency, color = Frequency)) +
geom_point(size = 0.5) +
facet_grid(. ~ Chromosome, scales = "free_x", space = "free_x") +
scale_x_continuous(breaks = c(0, 5000000, 10000000, 15000000, 20000000, 25000000),
labels = c("0", "5m", "10m", "15m", "20m", "25m")) +
scale_y_continuous(name = "population frequency", limits = c(0, 1),
breaks = seq(0, 1, by = 0.1)) +
scale_color_gradient(low = "blue", high = "red") +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5, size = 14)) +
labs(title = paste("P-element insertion frequencies in D. melanogaster - replicate", i))
plots[[i]] <- plot
}
grid <- do.call(grid.arrange, c(plots, ncol = 2))
ggsave("dna/figs/dmel_popTE2.png", grid, width = 24, height = 14, dpi = 300)
knitr::include_graphics("dna/figs/dmel_popTE2.png")
library(ggplot2)
library(gridExtra)
theme_set(theme_bw())
datasets <- list()
for (i in 1:10) {
file_path <- sprintf("/Volumes/Data/Projects/invaded_inbred_lines/dna/popTE2/dsim/replicates/%d.teinsertions", i)
dataset <- read.table(file_path)
names(dataset) <- c("Sample", "Chromosome", "Position", "Strand", "TE", "Order", "FR", "Comment", "Frequency")
dataset <- subset(dataset, Chromosome %in% c("X", "2L", "2R", "3L", "3R", "4"))
datasets[[i]] <- dataset
}
plots <- list()
for (i in 1:10) {
dataset <- datasets[[i]]
plot <- ggplot(dataset, aes(x = Position, y = Frequency, color = Frequency)) +
geom_point(size = 0.5) +
facet_grid(. ~ Chromosome, scales = "free_x", space = "free_x") +
scale_x_continuous(breaks = c(0, 5000000, 10000000, 15000000, 20000000, 25000000),
labels = c("0", "5m", "10m", "15m", "20m", "25m")) +
scale_y_continuous(name = "population frequency", limits = c(0, 1),
breaks = seq(0, 1, by = 0.1)) +
scale_color_gradient(low = "blue", high = "red") +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5, size = 14)) +
labs(title = paste("P-element insertion frequencies in D. simulans - replicate", i))
plots[[i]] <- plot
}
grid <- do.call(grid.arrange, c(plots, ncol = 2))
ggsave("dna/figs/dsim_popTE2.png", grid, width = 24, height = 14, dpi = 300)
knitr::include_graphics("dna/figs/dsim_popTE2.png")
library(ggplot2)
library(gridExtra)
theme_set(theme_bw())
datasets <- list()
directory_path <- "/Volumes/Data/Projects/invaded_inbred_lines/dna/popTE2/dyak/replicates/"
replicate_files <- list.files(directory_path, pattern = "\\.teinsertions", full.names = TRUE)
replicate_numbers <- sub(".*/(\\d+)\\.teinsertions", "\\1", replicate_files)
for (i in replicate_numbers) {
file_path <- file.path(directory_path, paste0(i, ".teinsertions"))
if (file.exists(file_path)) {
dataset <- read.table(file_path)
names(dataset) <- c("Sample", "Chromosome", "Position", "Strand", "TE", "Order", "FR", "Comment", "Frequency")
dataset <- subset(dataset, Chromosome %in% c("X", "2L", "2R", "3L", "3R", "4"))
datasets[[i]] <- dataset
} else {
cat("File not found for replicate", i, "\n")
}
}
plots <- list()
for (i in replicate_numbers) {
dataset <- datasets[[i]]
plot <- ggplot(dataset, aes(x = Position, y = Frequency, color = Frequency)) +
geom_point(size = 0.5) +
facet_grid(. ~ Chromosome, scales = "free_x", space = "free_x") +
scale_x_continuous(breaks = c(0, 5000000, 10000000, 15000000, 20000000, 25000000),
labels = c("0", "5m", "10m", "15m", "20m", "25m")) +
scale_y_continuous(name = "population frequency", limits = c(0, 1),
breaks = seq(0, 1, by = 0.1)) +
scale_color_gradient(low = "blue", high = "red") +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5, size = 14)) +
labs(title = paste("P-element insertion frequencies in D. yakuba - replicate", i))
plots[[i]] <- plot
}
grid <- do.call(grid.arrange, c(plots, ncol = 2))
ggsave("dna/figs/dyak_popTE2.png", grid, width = 24, height = 14, dpi = 300)
knitr::include_graphics("dna/figs/dyak_popTE2.png")
library(viridisLite)
library(ggplot2)
library(gridExtra)
theme_set(theme_bw())
dm <- read.table("/Volumes/Data/Projects/invaded_inbred_lines/dna/popTE2/dmel/bgi/dmel_bgi.teinsertions")
names(dm) <- c("Sample", "Chromosome", "Position", "Strand", "TE", "Order", "FR", "Comment", "Frequency")
ds <- read.table("/Volumes/Data/Projects/invaded_inbred_lines/dna/popTE2/dsim/bgi/dsim_bgi.teinsertions")
names(ds) <- c("Sample", "Chromosome", "Position", "Strand", "TE", "Order", "FR", "Comment", "Frequency")
dm <- subset(dm, Chromosome == "X" | Chromosome == "2L" | Chromosome == "2R" | Chromosome == "3L" | Chromosome == "3R" | Chromosome == "4")
ds <- subset(ds, Chromosome == "X" | Chromosome == "2L" | Chromosome == "2R" | Chromosome == "3L" | Chromosome == "3R" | Chromosome == "4")
dm$Chromosome <- factor(dm$Chromosome, levels = c("X", "2L", "2R", "3L", "3R", "4"))
lim <- c(0.0, 0.51)
ybreaks <- c(0, 0.1, 0.2, 0.3, 0.4, 0.5)
ds$Chromosome <- factor(ds$Chromosome, levels = c("X", "2L", "2R", "3L", "3R", "4"))
lim <- c(0.0, 0.51)
ybreaks <- c(0, 0.1, 0.2, 0.3, 0.4, 0.5)
sample_colors <- viridisLite::turbo(11)
dm$Sample <- as.factor(dm$Sample)
ds$Sample <- as.factor(ds$Sample)
dmp <- ggplot(dm, aes(x = Position, y = Frequency, color = Sample)) +
geom_point(size = 0.5) +
facet_grid(. ~ Chromosome, scales = "free_x", space = "free_x") +
scale_x_continuous(breaks = c(0, 5000000, 10000000, 15000000, 20000000, 25000000),
labels = c("0", "5m", "10m", "15m", "20m", "25m")) +
scale_y_continuous(name = "Population frequency", limits = c(min(dm$Frequency), max(dm$Frequency)),
breaks = seq(0, 1, by = 0.1)) +
scale_color_manual(values = sample_colors) +
theme(legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 14)) +
labs(title = "P-element insertion frequencies in D. melanogaster populations")
dsp <- ggplot(ds, aes(x = Position, y = Frequency, color = Sample)) +
geom_point(size = 0.5) +
facet_grid(. ~ Chromosome, scales = "free_x", space = "free_x") +
scale_x_continuous(breaks = c(0, 5000000, 10000000, 15000000, 20000000, 25000000),
labels = c("0", "5m", "10m", "15m", "20m", "25m")) +
scale_y_continuous(name = "Population frequency", limits = c(min(ds$Frequency), max(ds$Frequency)),
breaks = seq(0, 1, by = 0.1)) +
scale_color_manual(values = sample_colors) +
theme(legend.position = "right",
plot.title = element_text(hjust = 0.5, size = 14)) +
labs(title = "P-element insertion frequencies in D. simulans populations")
ggsave("dna/figs/dmel_bgi_popTE2_all.png", dmp, width = 16, height = 8, dpi = 300)
ggsave("dna/figs/dsim_bgi_popTE2_all.png", dsp, width = 16, height = 8, dpi = 300)
knitr::include_graphics("dna/figs/dmel_bgi_popTE2_all.png")
knitr::include_graphics("dna/figs/dsim_bgi_popTE2_all.png")
library(ggplot2)
library(gridExtra)
theme_set(theme_bw())
datasets <- list()
for (i in 1:5) {
file_path <- sprintf("/Volumes/Data/Projects/invaded_inbred_lines/dna/popTE2/dmel/bgi/replicates/%d.teinsertions", i)
dataset <- read.table(file_path)
names(dataset) <- c("Sample", "Chromosome", "Position", "Strand", "TE", "Order", "FR", "Comment", "Frequency")
dataset <- subset(dataset, Chromosome %in% c("X", "2L", "2R", "3L", "3R", "4"))
datasets[[i]] <- dataset
}
plots <- list()
for (i in 1:5) {
dataset <- datasets[[i]]
plot <- ggplot(dataset, aes(x = Position, y = Frequency, color = Frequency)) +
geom_point(size = 0.5) +
facet_grid(. ~ Chromosome, scales = "free_x", space = "free_x") +
scale_x_continuous(breaks = c(0, 5000000, 10000000, 15000000, 20000000, 25000000),
labels = c("0", "5m", "10m", "15m", "20m", "25m")) +
scale_y_continuous(name = "population frequency", limits = c(0, 1),
breaks = seq(0, 1, by = 0.1)) +
scale_color_gradient(low = "blue", high = "red") +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5, size = 14)) +
labs(title = paste("P-element insertion frequencies in D. melanogaster - replicate", i))
plots[[i]] <- plot
}
grid <- do.call(grid.arrange, c(plots, ncol = 2))
ggsave("dna/figs/dmel_bgi_popTE2.png", grid, width = 24, height = 14, dpi = 300)
knitr::include_graphics("dna/figs/dmel_bgi_popTE2.png")
library(ggplot2)
library(gridExtra)
theme_set(theme_bw())
datasets <- list()
for (i in 1:3) {
file_path <- sprintf("/Volumes/Data/Projects/invaded_inbred_lines/dna/popTE2/dsim/bgi/replicates/%d.teinsertions", i)
dataset <- read.table(file_path)
names(dataset) <- c("Sample", "Chromosome", "Position", "Strand", "TE", "Order", "FR", "Comment", "Frequency")
dataset <- subset(dataset, Chromosome %in% c("X", "2L", "2R", "3L", "3R", "4"))
datasets[[i]] <- dataset
}
plots <- list()
for (i in 1:3) {
dataset <- datasets[[i]]
plot <- ggplot(dataset, aes(x = Position, y = Frequency, color = Frequency)) +
geom_point(size = 0.5) +
facet_grid(. ~ Chromosome, scales = "free_x", space = "free_x") +
scale_x_continuous(breaks = c(0, 5000000, 10000000, 15000000, 20000000, 25000000),
labels = c("0", "5m", "10m", "15m", "20m", "25m")) +
scale_y_continuous(name = "population frequency", limits = c(0, 1),
breaks = seq(0, 1, by = 0.1)) +
scale_color_gradient(low = "blue", high = "red") +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5, size = 14)) +
labs(title = paste("P-element insertion frequencies in D. simulans - replicate", i))
plots[[i]] <- plot
}
grid <- do.call(grid.arrange, c(plots, ncol = 2))
ggsave("dna/figs/dsim_bgi_popTE2.png", grid, width = 24, height = 14, dpi = 300)
knitr::include_graphics("dna/figs/dsim_bgi_popTE2.png")
require(RIdeogram)
library(RColorBrewer)
dmel_karyotype <- read.table("/Volumes/Data/Tools/RefGenomes/karyotypes_dmel.txt", sep = "\t", header = T, stringsAsFactors = F)
dsim_karyotype <- read.table("/Volumes/Data/Tools/RefGenomes/karyotypes_dsim.txt", sep = "\t", header = T, stringsAsFactors = F)
dmel_freq <- read.table("/Volumes/Data/Projects/invaded_inbred_lines/dna/popTE2/dmel/bgi/dmel_all_10x.txt", sep = "\t", header = T, stringsAsFactors = F)
dsim_freq <- read.table("/Volumes/Data/Projects/invaded_inbred_lines/dna/popTE2/dsim/bgi/dsim_all_10x.txt", sep = "\t", header = T, stringsAsFactors = F)
ideogram(karyotype = dmel_karyotype, overlaid = dmel_freq, width = 75, colorset1 = brewer.pal(9, "Blues"))
convertSVG("chromosome.svg", device = "png", dpi = 1200)
ideogram(karyotype = dsim_karyotype, overlaid = dsim_freq, width = 75, colorset1 = brewer.pal(9, "Blues"))
convertSVG("chromosome.svg", device = "png")
knitr::include_graphics("figs/RIdeogram/dmel_3_50x.png")
knitr::include_graphics("figs/RIdeogram/dmel_3_50x.png")
knitr::include_graphics("figs/RIdeogram/dsim_14_50x.png")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(gridExtra)
theme_set(theme_bw())
datasets <- list()
for (i in 1:5) {
file_path <- sprintf("/Volumes/Data/Projects/invaded_inbred_lines/dna/popTE2/dmel/bgi/replicates/%d.teinsertions", i)
dataset <- read.table(file_path)
names(dataset) <- c("Sample", "Chromosome", "Position", "Strand", "TE", "Order", "FR", "Comment", "Frequency")
dataset <- subset(dataset, Chromosome %in% c("X", "2L", "2R", "3L", "3R", "4"))
datasets[[i]] <- dataset
}
plots <- list()
for (i in 1:5) {
dataset <- datasets[[i]]
plot <- ggplot(dataset, aes(x = Position, y = Frequency, color = Frequency)) +
geom_point(size = 0.5) +
facet_grid(. ~ Chromosome, scales = "free_x", space = "free_x") +
scale_x_continuous(breaks = c(0, 5000000, 10000000, 15000000, 20000000, 25000000),
labels = c("0", "5m", "10m", "15m", "20m", "25m")) +
scale_y_continuous(name = "population frequency", limits = c(0, 1),
breaks = seq(0, 1, by = 0.1)) +
scale_color_gradient(low = "blue", high = "red") +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5, size = 14)) +
labs(title = paste("Replicate", i))
plots[[i]] <- plot
}
grid <- do.call(grid.arrange, c(plots, ncol = 2))
ggsave("dna/figs/dmel_bgi_popTE2.png", grid, width = 24, height = 14, dpi = 300)
knitr::include_graphics("dna/figs/dmel_bgi_popTE2.png")
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("figs/deviaTE_png/Dmel_1.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dmel_2.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dmel_3.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dmel_4.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dmel_5.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dmel_6.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dmel_7.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dmel_8.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dmel_9.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dmel_10.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dmel_N1.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dsim_11.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dsim_12.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dsim_13.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dsim_14.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dsim_15.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dsim_16.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dsim_17.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dsim_18.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dsim_19.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dsim_20.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dyak_21.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dyak_23.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dyak_24.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dyak_25.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dyak_26.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dyak_27.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dyak_28.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dyak_29.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dyak_30.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dyak_N3.PPI251.png")
knitr::include_graphics("figs/deviaTE_png/Dsim_17.PPI251.png")
